3
class Factorial { 
   public static Void main ( String [] a ) { 
       System.out.println ( 123 ) ;
   }
}

class Fac { 
    public int ComputeFac ( ) { 

        return 1;
    }

}


-------------------------------------------

Unfounded method: ComputeFac
Factorial



void main
(
string a
)


_________
Fac



int ComputeFac
(
)


_________


------------Type cheking completed-----------

-----------CODE BEFORE CANONIZING--------------
FacComputeFac
ESEQ(EXP(CONST(0)), 
    CONST(1))
--------------CANONIZING FINISHED-----------------
 L0
--------------CANONIZING CODE END------------

----------------ASSEMBLER CODE---------------------
L0:
ADDI T0 <- 'r0+1
MOVE rv <- T0

----------------ASSEMBLER CODE FINISHED-------------------

-----------CODE BEFORE CANONIZING--------------
main
ESEQ(EXP(CALL(NAME(System.out.println), 
    CONST(-842150451))), 
    CONST(0))
--------------CANONIZING FINISHED-----------------

--------------------BLOCK-------------------------
 L2EXP(CALL(NAME(System.out.println), 
    CONST(-842150451)))JUMP(L1, 
    )
----------------END OF BLOCK----------------
 L2EXP(CALL(NAME(System.out.println), 
    CONST(-842150451)))JUMP(L1, 
    ) L1
--------------CANONIZING CODE END------------

----------------ASSEMBLER CODE---------------------
L2:
ADDI T2 <- 'r0+-842150451
ADD T1 <- T2 + r0
CALL System.out.println
L1:
ADDI T3 <- 'r0+0
MOVE rv <- T3

----------------ASSEMBLER CODE FINISHED-------------------
