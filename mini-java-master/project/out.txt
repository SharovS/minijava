3
class Factorial { 
   public static Void main ( String [] a ) { 
       System.out.println ( "®ÛW" ) ;
   }
}

class Fac { 
    public int ComputeFac ( ) { 
        int a ;
        a = 5;
        System.out.println ( a ) ;

        return 1;
    }

}


-------------------------------------------

Unfounded method: ComputeFac
Factorial



void main
(
string a
)


_________
Fac



int ComputeFac
(
)
int a


_________


------------Type cheking completed-----------

-----------CODE BEFORE CANONIZING--------------
FacComputeFac
ESEQ(SEQ(MOVE(TEMP(T0), 
    CONST(5)), 
    EXP(CALL(NAME(System.out.println), 
        TEMP(T0)))), 
    CONST(1))
--------------CANONIZING FINISHED-----------------

--------------------BLOCK-------------------------
 L1MOVE(TEMP(T0), 
    CONST(5))EXP(CALL(NAME(System.out.println), 
    TEMP(T0)))JUMP(L0, 
    )
----------------END OF BLOCK----------------
 L1MOVE(TEMP(T0), 
    CONST(5))EXP(CALL(NAME(System.out.println), 
    TEMP(T0)))JUMP(L0, 
    ) L0
--------------CANONIZING CODE END------------

----------------ASSEMBLER CODE---------------------
L1:
ADDI T1 <- 'r0+5
ADD T0 <- T1 + r0
ADD T2 <- T0 + r0
CALL System.out.println
L0:
ADDI T3 <- 'r0+1
MOVE rv <- T3

----------------ASSEMBLER CODE FINISHED-------------------

-----------CODE BEFORE CANONIZING--------------
main
ESEQ(EXP(CALL(NAME(System.out.println), 
    CALL(NAME(L1916298011), 
        CONST(3)))), 
    CONST(0))
--------------CANONIZING FINISHED-----------------

--------------------BLOCK-------------------------
 L3MOVE(TEMP(T4), 
    CALL(NAME(L1916298011), 
        CONST(3)))EXP(CALL(NAME(System.out.println), 
    TEMP(T4)))JUMP(L2, 
    )
----------------END OF BLOCK----------------
 L3MOVE(TEMP(T4), 
    CALL(NAME(L1916298011), 
        CONST(3)))EXP(CALL(NAME(System.out.println), 
    TEMP(T4)))JUMP(L2, 
    ) L2
--------------CANONIZING CODE END------------

----------------ASSEMBLER CODE---------------------
L3:
ADDI T6 <- 'r0+3
ADD T5 <- T6 + r0
CALL L1916298011
ADD T4 <- 'r0 + rv
ADD T7 <- T4 + r0
CALL System.out.println
L2:
ADDI T8 <- 'r0+0
MOVE rv <- T8

----------------ASSEMBLER CODE FINISHED-------------------
